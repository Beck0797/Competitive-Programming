// https://leetcode.com/problems/search-insert-position/?envType=study-plan&id=algorithm-i

class Solution {
public:
    int searchInsert(vector<int>& nums, int target) {
        int l = 0;
        int r = nums.size() - 1;
        int m = 0;
        
        while(l <= r) {
            int m = (l + r) / 2;
            cout << "l is " << l << endl;
            cout << "r is " << r << endl;
            cout << "m is " << m << endl;
          
            cout << endl;
            
            if(nums[m] == target) {
                return m;
            } else if (nums[m] > target) {              
                r = m - 1;
            } else {
                l = m + 1;
            }
        }
        return l;
    }
};
