//https://leetcode.com/explore/interview/card/top-interview-questions-easy/92/array/546/

class Solution {
       
        int find_index(int array[], int target, int k) {
                int index = -1;
                int n = array.length;
                for(int i = 0; i < n; i++){
                        if(target == array[i] && i != k) {
                                index = i;
                        }
                }
                return index;
        }
    public int[] twoSum(int[] nums, int target) {
        
            int n = nums.length;
            int[] arr=new int[2];
            HashSet<Integer> st = new HashSet<Integer>();
           for(int i = 0; i < n; i++) {
                 int get = target - nums[i];
                   if(st.contains(get)) {
                         
                           int found_index = find_index(nums, get, i);
                           arr[0] = i;
                           arr[1]  = found_index; 
                           
                   }
                   else {
                           st.add(nums[i]); // 3 
                   }
           }
            
            return arr;
    }
}
